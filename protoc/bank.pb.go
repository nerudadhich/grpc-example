// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bank.proto

package protoc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CheckBalanceRequest struct {
	Account              string   `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckBalanceRequest) Reset()         { *m = CheckBalanceRequest{} }
func (m *CheckBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*CheckBalanceRequest) ProtoMessage()    {}
func (*CheckBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bank_ea5ea70712811e19, []int{0}
}
func (m *CheckBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckBalanceRequest.Unmarshal(m, b)
}
func (m *CheckBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckBalanceRequest.Marshal(b, m, deterministic)
}
func (dst *CheckBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckBalanceRequest.Merge(dst, src)
}
func (m *CheckBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_CheckBalanceRequest.Size(m)
}
func (m *CheckBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckBalanceRequest proto.InternalMessageInfo

func (m *CheckBalanceRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

type CheckBalanceResponse struct {
	Balance              float32  `protobuf:"fixed32,1,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckBalanceResponse) Reset()         { *m = CheckBalanceResponse{} }
func (m *CheckBalanceResponse) String() string { return proto.CompactTextString(m) }
func (*CheckBalanceResponse) ProtoMessage()    {}
func (*CheckBalanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bank_ea5ea70712811e19, []int{1}
}
func (m *CheckBalanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckBalanceResponse.Unmarshal(m, b)
}
func (m *CheckBalanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckBalanceResponse.Marshal(b, m, deterministic)
}
func (dst *CheckBalanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckBalanceResponse.Merge(dst, src)
}
func (m *CheckBalanceResponse) XXX_Size() int {
	return xxx_messageInfo_CheckBalanceResponse.Size(m)
}
func (m *CheckBalanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckBalanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckBalanceResponse proto.InternalMessageInfo

func (m *CheckBalanceResponse) GetBalance() float32 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type DepositeRequest struct {
	Account              string   `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Amount               float32  `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DepositeRequest) Reset()         { *m = DepositeRequest{} }
func (m *DepositeRequest) String() string { return proto.CompactTextString(m) }
func (*DepositeRequest) ProtoMessage()    {}
func (*DepositeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bank_ea5ea70712811e19, []int{2}
}
func (m *DepositeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DepositeRequest.Unmarshal(m, b)
}
func (m *DepositeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DepositeRequest.Marshal(b, m, deterministic)
}
func (dst *DepositeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepositeRequest.Merge(dst, src)
}
func (m *DepositeRequest) XXX_Size() int {
	return xxx_messageInfo_DepositeRequest.Size(m)
}
func (m *DepositeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DepositeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DepositeRequest proto.InternalMessageInfo

func (m *DepositeRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *DepositeRequest) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type DipositeResponse struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DipositeResponse) Reset()         { *m = DipositeResponse{} }
func (m *DipositeResponse) String() string { return proto.CompactTextString(m) }
func (*DipositeResponse) ProtoMessage()    {}
func (*DipositeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bank_ea5ea70712811e19, []int{3}
}
func (m *DipositeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DipositeResponse.Unmarshal(m, b)
}
func (m *DipositeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DipositeResponse.Marshal(b, m, deterministic)
}
func (dst *DipositeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DipositeResponse.Merge(dst, src)
}
func (m *DipositeResponse) XXX_Size() int {
	return xxx_messageInfo_DipositeResponse.Size(m)
}
func (m *DipositeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DipositeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DipositeResponse proto.InternalMessageInfo

func (m *DipositeResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type WithdrawRequest struct {
	Account              string   `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Amount               float32  `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WithdrawRequest) Reset()         { *m = WithdrawRequest{} }
func (m *WithdrawRequest) String() string { return proto.CompactTextString(m) }
func (*WithdrawRequest) ProtoMessage()    {}
func (*WithdrawRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bank_ea5ea70712811e19, []int{4}
}
func (m *WithdrawRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithdrawRequest.Unmarshal(m, b)
}
func (m *WithdrawRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithdrawRequest.Marshal(b, m, deterministic)
}
func (dst *WithdrawRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithdrawRequest.Merge(dst, src)
}
func (m *WithdrawRequest) XXX_Size() int {
	return xxx_messageInfo_WithdrawRequest.Size(m)
}
func (m *WithdrawRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WithdrawRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WithdrawRequest proto.InternalMessageInfo

func (m *WithdrawRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *WithdrawRequest) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type WithdrawResponse struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Balance              float32  `protobuf:"fixed32,2,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WithdrawResponse) Reset()         { *m = WithdrawResponse{} }
func (m *WithdrawResponse) String() string { return proto.CompactTextString(m) }
func (*WithdrawResponse) ProtoMessage()    {}
func (*WithdrawResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bank_ea5ea70712811e19, []int{5}
}
func (m *WithdrawResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithdrawResponse.Unmarshal(m, b)
}
func (m *WithdrawResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithdrawResponse.Marshal(b, m, deterministic)
}
func (dst *WithdrawResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithdrawResponse.Merge(dst, src)
}
func (m *WithdrawResponse) XXX_Size() int {
	return xxx_messageInfo_WithdrawResponse.Size(m)
}
func (m *WithdrawResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WithdrawResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WithdrawResponse proto.InternalMessageInfo

func (m *WithdrawResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *WithdrawResponse) GetBalance() float32 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func init() {
	proto.RegisterType((*CheckBalanceRequest)(nil), "protoc.CheckBalanceRequest")
	proto.RegisterType((*CheckBalanceResponse)(nil), "protoc.CheckBalanceResponse")
	proto.RegisterType((*DepositeRequest)(nil), "protoc.DepositeRequest")
	proto.RegisterType((*DipositeResponse)(nil), "protoc.DipositeResponse")
	proto.RegisterType((*WithdrawRequest)(nil), "protoc.WithdrawRequest")
	proto.RegisterType((*WithdrawResponse)(nil), "protoc.WithdrawResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BankClient is the client API for Bank service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BankClient interface {
	GetBalance(ctx context.Context, in *CheckBalanceRequest, opts ...grpc.CallOption) (*CheckBalanceResponse, error)
	Deposite(ctx context.Context, in *DepositeRequest, opts ...grpc.CallOption) (*DipositeResponse, error)
	Withdraw(ctx context.Context, in *WithdrawRequest, opts ...grpc.CallOption) (*WithdrawResponse, error)
}

type bankClient struct {
	cc *grpc.ClientConn
}

func NewBankClient(cc *grpc.ClientConn) BankClient {
	return &bankClient{cc}
}

func (c *bankClient) GetBalance(ctx context.Context, in *CheckBalanceRequest, opts ...grpc.CallOption) (*CheckBalanceResponse, error) {
	out := new(CheckBalanceResponse)
	err := c.cc.Invoke(ctx, "/protoc.Bank/GetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bankClient) Deposite(ctx context.Context, in *DepositeRequest, opts ...grpc.CallOption) (*DipositeResponse, error) {
	out := new(DipositeResponse)
	err := c.cc.Invoke(ctx, "/protoc.Bank/Deposite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bankClient) Withdraw(ctx context.Context, in *WithdrawRequest, opts ...grpc.CallOption) (*WithdrawResponse, error) {
	out := new(WithdrawResponse)
	err := c.cc.Invoke(ctx, "/protoc.Bank/Withdraw", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BankServer is the server API for Bank service.
type BankServer interface {
	GetBalance(context.Context, *CheckBalanceRequest) (*CheckBalanceResponse, error)
	Deposite(context.Context, *DepositeRequest) (*DipositeResponse, error)
	Withdraw(context.Context, *WithdrawRequest) (*WithdrawResponse, error)
}

func RegisterBankServer(s *grpc.Server, srv BankServer) {
	s.RegisterService(&_Bank_serviceDesc, srv)
}

func _Bank_GetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BankServer).GetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoc.Bank/GetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BankServer).GetBalance(ctx, req.(*CheckBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bank_Deposite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DepositeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BankServer).Deposite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoc.Bank/Deposite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BankServer).Deposite(ctx, req.(*DepositeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bank_Withdraw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithdrawRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BankServer).Withdraw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoc.Bank/Withdraw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BankServer).Withdraw(ctx, req.(*WithdrawRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Bank_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protoc.Bank",
	HandlerType: (*BankServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBalance",
			Handler:    _Bank_GetBalance_Handler,
		},
		{
			MethodName: "Deposite",
			Handler:    _Bank_Deposite_Handler,
		},
		{
			MethodName: "Withdraw",
			Handler:    _Bank_Withdraw_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bank.proto",
}

func init() { proto.RegisterFile("bank.proto", fileDescriptor_bank_ea5ea70712811e19) }

var fileDescriptor_bank_ea5ea70712811e19 = []byte{
	// 259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x4a, 0xcc, 0xcb,
	0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x03, 0x53, 0xc9, 0x4a, 0xfa, 0x5c, 0xc2, 0xce,
	0x19, 0xa9, 0xc9, 0xd9, 0x4e, 0x89, 0x39, 0x89, 0x79, 0xc9, 0xa9, 0x41, 0xa9, 0x85, 0xa5, 0xa9,
	0xc5, 0x25, 0x42, 0x12, 0x5c, 0xec, 0x89, 0xc9, 0xc9, 0xf9, 0xa5, 0x79, 0x25, 0x12, 0x8c, 0x0a,
	0x8c, 0x1a, 0x9c, 0x41, 0x30, 0xae, 0x92, 0x01, 0x97, 0x08, 0xaa, 0x86, 0xe2, 0x82, 0xfc, 0xbc,
	0xe2, 0x54, 0x90, 0x8e, 0x24, 0x88, 0x10, 0x58, 0x07, 0x53, 0x10, 0x8c, 0xab, 0xe4, 0xcc, 0xc5,
	0xef, 0x92, 0x5a, 0x90, 0x5f, 0x9c, 0x59, 0x42, 0xd8, 0x78, 0x21, 0x31, 0x2e, 0xb6, 0xc4, 0x5c,
	0xb0, 0x04, 0x13, 0xd8, 0x14, 0x28, 0x4f, 0x49, 0x8b, 0x4b, 0xc0, 0x25, 0x13, 0x66, 0x08, 0xd4,
	0x4a, 0x31, 0x2e, 0xb6, 0xe2, 0x92, 0xc4, 0x92, 0xd2, 0x62, 0xb0, 0x21, 0x1c, 0x41, 0x50, 0x1e,
	0xc8, 0xc2, 0xf0, 0xcc, 0x92, 0x8c, 0x94, 0xa2, 0xc4, 0x72, 0xf2, 0x2d, 0x74, 0xe1, 0x12, 0x40,
	0x18, 0x82, 0xdf, 0x42, 0x64, 0xbf, 0x33, 0xa1, 0xf8, 0xdd, 0xe8, 0x32, 0x23, 0x17, 0x8b, 0x53,
	0x62, 0x5e, 0xb6, 0x90, 0x27, 0x17, 0x97, 0x7b, 0x6a, 0x09, 0x34, 0xd0, 0x84, 0xa4, 0x21, 0xb1,
	0x90, 0xac, 0x87, 0x25, 0xec, 0xa5, 0x64, 0xb0, 0x4b, 0x42, 0xdc, 0xa0, 0xc4, 0x20, 0x64, 0xcf,
	0xc5, 0x01, 0x0b, 0x4f, 0x21, 0x71, 0x98, 0x5a, 0xb4, 0x10, 0x96, 0x92, 0x80, 0x4b, 0xa0, 0x85,
	0x1a, 0xc4, 0x00, 0x98, 0xd7, 0x10, 0x06, 0xa0, 0x85, 0x18, 0xc2, 0x00, 0xf4, 0x50, 0x50, 0x62,
	0x48, 0x82, 0x24, 0x1e, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7d, 0x8c, 0x69, 0x27, 0x51,
	0x02, 0x00, 0x00,
}
